<?xml version="1.0" encoding="UTF-8"?>
<question id="1" level="2" subject="ordenacao">
	<text>
       <p> O algoritmo <a href="https://pt.wikipedia.org/wiki/Quicksort">Quick-Sort</a> é um algoritmo 
	   consogrado na computação devido sua grande eficiência, obtendo uma complexidade $O(n\log{}n)$ no caso médio. 
	   Abaixo há uma implementação recursiva em pseudo-código do algoritmo</p>
<pre><code>
procedimento QuickSort(X[], IniVet, FimVet)
var 
   i, j, pivo, aux
início
   i = IniVet
   j = FimVet
   pivo = X[(IniVet + FimVet) div 2]
   enquanto(j > i)
      enquanto (????) faça
         i = i + 1
      fimEnquanto
      enquanto (X[j] > pivo) faça
         j = j - 1
      fimEnquanto
      se (j >= i) então
         aux  = X[i]
         X[i] = X[j]
         X[j] = aux
         i = i + 1
         j = j - 1
      fimSe
   fimEnquanto
   se (j > IniVet) então
      ???? 
   fimSe
   se (FimVet > i) então
      QuickSort(X, i, FimVet)
   fimse
fimprocedimento
</code></pre>
	<p>O algoritmo encontra-se incompleto. Uma possível maneira de completá-lo seria:</p>
	</text>
	<choice type="incorrect">
		<text>$X[i] > pivo$ e $X[j] = IniVet$</text>
		<explanation>
            O algoritmo precisa se chamar recursivamente em ambos os casos. No caso em que $j > InitVet$
            essa chamada não ocorreu.
		</explanation>
	</choice>
	<choice type="incrrect">
		<text>$pivo > X[i]$ e $X[j] = IniVet$</text>
		<explanation>
            Não é chamada recursiva no caso em que $j > InitVet$. Assim o comportamento do Quick-Sort não será
            repetido recursivamente nesse caso.
		</explanation>
	</choice>
	<choice type="incorrect">
		<text>$pivo > X[i]$ e $QuickSort(X, i, FimVet)$</text>
		<explanation>
            A chamada não recursiva não foi realizada em função de $j$ e portanto não faz sentido.
		</explanation>
	</choice>
	<choice type="correct">
		<text>$pivo > X[i]$ e $QuickSort(X, IniVet, j)$</text>
		<explanation>
			O Quick-Sort faz uma chamada recursiva nos dois vetores (à esquerda e direita) do pivo até que os vetores possuam 
			tamanho 1. Caso o pivo escolhido seja o maior ou o menor elemento em todos os passos do algoritmo, o número de operações
			realizadas é de ordem quadrática $O(n^2)$, sendo esse o pior caso. 
		</explanation>
	</choice>
	<choice type="incorrect">
		<text>$QuickSort(X, i, FimVet)$ e $QuickSort(X, IniVet, j)$</text>
		<explanation>
			Um laço enquanto depende de uma condição em seu escopo. A função $Quick-Sort$ não tem retorno
            então não deve ser utilizada como uma condição para o laço.
		</explanation>
	</choice>
</question>