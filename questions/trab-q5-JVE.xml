<?xml version="1.0" encoding="UTF-8"?>
<question level="2" chapter="5">
	<text>
		<p>
			Um algoritmo guloso é uma técnica de resolução de problemas de otimização. 
			Segue abaixo um exemplo de algoritmo que soluciona o problema do <a href="https://en.wikipedia.org/wiki/Continuous_knapsack_problem">
			mochila fracionário</a>. Qual opção abaixo é correta?
		</p>
<pre><code>Mochila-Fracionária (p, v, n, c)
   j ← n
   enquanto  j ≥ 1  e  pj ≤ c  faça
      xj ← 1
      c ← c − pj
      j ← j − 1
   se  j ≥ 1  então
      xj ← c/pj
      para  i ← j−1  decrescendo até  1  faça
         xi ← 0
   devolva  x
</code></pre>
		<i>
			<ul>
				<li>- $n$ é o número de objetos</li>
				<li>- cada objeto $i$ tem peso $pi$ e valor específico $vi$</li>
				<li>- $c$ é a capacidade da mochila e deve ser respeitada</li>
                <li>- $xi$ é o número de objetos selecionados de indíce $i$</li>
                <li>- deseja-se preencher a mochila com o maior valor possível</li>
                <li>- supor que os objetos já se encontram ordenados de forma decrescente em relação a $vi$</li>
			</ul>
		</i>
	<choice type="incorrect">
		<text>O algoritmo é eficiente pois realiza retornos (Backtrackings) para otimização </text>
		<explanation>
			O algoritmo itera segundo um critério sem realizar retornos (Backtracking), o que caracteriza um algoritmo guloso.
		</explanation>
	</choice>
	<choice type="incorrect">
		<text>O algoritmo realiza um número constante de operações.</text>
		<explanation>
			O número de operações realizadas não é constante, pois o número de iterações realizadas depende de $n$, 
			em razão do laço $para$ contido no algoritmo.
		</explanation>
	</choice>
	<choice type="incorrect">
		<text> 
            Esse algoritmo poderia ser utilizado caso os coeficientes $xi$ pudessem ser apenas inteiros.
		</text>
		<explanation>
			Essa ténica não poderá ser utilzada, pois poderia ser necessário, seguindo essa lógica, 
			realizar retornos (Backtracking) para garantir a otimização.     
		</explanation>
	</choice>
	<choice type="incorrect">
		<text>O algoritmo adiciona à mochila sempre o objeto de menor valor e isso garante a corretude na solução.</text>
		<explanation>
			O algoritmo adiciona sempre o objeto de menor valor específico. Isso que garante a corretude na solução do problema.
		</explanation>
	</choice>
	<choice type="correct">
		<text>
			O fato dos coeficientes serem $xi$ serem reais permite que o algoritmo funcione corretamente.
		</text>
		<explanation>
			Como os coeficientes são reais, pode-se escolher valores fracionários para os coeficientes. Isso garante que o melhor objeto em termos de valor
            específico possa sempre ser escolhido.
		</explanation>
	</choice>
</question>